{"ast":null,"code":"/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.chroma = factory();\n})(this, function () {\n  'use strict';\n\n  var limit = function (x, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return x < min ? min : x > max ? max : x;\n  };\n\n  var clip_rgb = function (rgb) {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n\n    for (var i = 0; i <= 3; i++) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n\n        rgb[i] = limit(rgb[i], 0, 255);\n      } else if (i === 3) {\n        rgb[i] = limit(rgb[i], 0, 1);\n      }\n    }\n\n    return rgb;\n  }; // ported from jQuery's $.type\n\n\n  var classToType = {};\n\n  for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n    var name = list[i];\n    classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n  }\n\n  var type = function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || \"object\";\n  };\n\n  var unpack = function (args, keyOrder) {\n    if (keyOrder === void 0) keyOrder = null; // if called with more than 3 arguments, we return the arguments\n\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n\n\n    if (type(args[0]) == 'object' && keyOrder) {\n      return keyOrder.split('').filter(function (k) {\n        return args[0][k] !== undefined;\n      }).map(function (k) {\n        return args[0][k];\n      });\n    } // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n\n\n    return args[0];\n  };\n\n  var last = function (args) {\n    if (args.length < 2) {\n      return null;\n    }\n\n    var l = args.length - 1;\n\n    if (type(args[l]) == 'string') {\n      return args[l].toLowerCase();\n    }\n\n    return null;\n  };\n\n  var PI = Math.PI;\n  var utils = {\n    clip_rgb: clip_rgb,\n    limit: limit,\n    type: type,\n    unpack: unpack,\n    last: last,\n    PI: PI,\n    TWOPI: PI * 2,\n    PITHIRD: PI / 3,\n    DEG2RAD: PI / 180,\n    RAD2DEG: 180 / PI\n  };\n  var input = {\n    format: {},\n    autodetect: []\n  };\n  var last$1 = utils.last;\n  var clip_rgb$1 = utils.clip_rgb;\n  var type$1 = utils.type;\n\n  var Color = function Color() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var me = this;\n\n    if (type$1(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    } // last argument could be the mode\n\n\n    var mode = last$1(args);\n    var autodetect = false;\n\n    if (!mode) {\n      autodetect = true;\n\n      if (!input.sorted) {\n        input.autodetect = input.autodetect.sort(function (a, b) {\n          return b.p - a.p;\n        });\n        input.sorted = true;\n      } // auto-detect format\n\n\n      for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n        var chk = list[i];\n        mode = chk.test.apply(chk, args);\n\n        if (mode) {\n          break;\n        }\n      }\n    }\n\n    if (input.format[mode]) {\n      var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb$1(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    } // add alpha channel\n\n\n    if (me._rgb.length === 3) {\n      me._rgb.push(1);\n    }\n  };\n\n  Color.prototype.toString = function toString() {\n    if (type$1(this.hex) == 'function') {\n      return this.hex();\n    }\n\n    return \"[\" + this._rgb.join(',') + \"]\";\n  };\n\n  var Color_1 = Color;\n\n  var chroma = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(chroma.Color, [null].concat(args)))();\n  };\n\n  chroma.Color = Color_1;\n  chroma.version = '2.1.2';\n  var chroma_1 = chroma;\n  var unpack$1 = utils.unpack;\n  var max = Math.max;\n\n  var rgb2cmyk = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$1(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var k = 1 - max(r, max(g, b));\n    var f = k < 1 ? 1 / (1 - k) : 0;\n    var c = (1 - r - k) * f;\n    var m = (1 - g - k) * f;\n    var y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  var rgb2cmyk_1 = rgb2cmyk;\n  var unpack$2 = utils.unpack;\n\n  var cmyk2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$2(args, 'cmyk');\n    var c = args[0];\n    var m = args[1];\n    var y = args[2];\n    var k = args[3];\n    var alpha = args.length > 4 ? args[4] : 1;\n\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n\n    return [c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n    m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n    y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n    alpha];\n  };\n\n  var cmyk2rgb_1 = cmyk2rgb;\n  var unpack$3 = utils.unpack;\n  var type$2 = utils.type;\n\n  Color_1.prototype.cmyk = function () {\n    return rgb2cmyk_1(this._rgb);\n  };\n\n  chroma_1.cmyk = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['cmyk'])))();\n  };\n\n  input.format.cmyk = cmyk2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$3(args, 'cmyk');\n\n      if (type$2(args) === 'array' && args.length === 4) {\n        return 'cmyk';\n      }\n    }\n  });\n  var unpack$4 = utils.unpack;\n  var last$2 = utils.last;\n\n  var rnd = function (a) {\n    return Math.round(a * 100) / 100;\n  };\n  /*\n   * supported arguments:\n   * - hsl2css(h,s,l)\n   * - hsl2css(h,s,l,a)\n   * - hsl2css([h,s,l], mode)\n   * - hsl2css([h,s,l,a], mode)\n   * - hsl2css({h,s,l,a}, mode)\n   */\n\n\n  var hsl2css = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var hsla = unpack$4(args, 'hsla');\n    var mode = last$2(args) || 'lsa';\n    hsla[0] = rnd(hsla[0] || 0);\n    hsla[1] = rnd(hsla[1] * 100) + '%';\n    hsla[2] = rnd(hsla[2] * 100) + '%';\n\n    if (mode === 'hsla' || hsla.length > 3 && hsla[3] < 1) {\n      hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n      mode = 'hsla';\n    } else {\n      hsla.length = 3;\n    }\n\n    return mode + \"(\" + hsla.join(',') + \")\";\n  };\n\n  var hsl2css_1 = hsl2css;\n  var unpack$5 = utils.unpack;\n  /*\n   * supported arguments:\n   * - rgb2hsl(r,g,b)\n   * - rgb2hsl(r,g,b,a)\n   * - rgb2hsl([r,g,b])\n   * - rgb2hsl([r,g,b,a])\n   * - rgb2hsl({r,g,b,a})\n   */\n\n  var rgb2hsl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$5(args, 'rgba');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var l = (max + min) / 2;\n    var s, h;\n\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n\n    if (r == max) {\n      h = (g - b) / (max - min);\n    } else if (g == max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b == max) {\n      h = 4 + (r - g) / (max - min);\n    }\n\n    h *= 60;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    if (args.length > 3 && args[3] !== undefined) {\n      return [h, s, l, args[3]];\n    }\n\n    return [h, s, l];\n  };\n\n  var rgb2hsl_1 = rgb2hsl;\n  var unpack$6 = utils.unpack;\n  var last$3 = utils.last;\n  var round = Math.round;\n  /*\n   * supported arguments:\n   * - rgb2css(r,g,b)\n   * - rgb2css(r,g,b,a)\n   * - rgb2css([r,g,b], mode)\n   * - rgb2css([r,g,b,a], mode)\n   * - rgb2css({r,g,b,a}, mode)\n   */\n\n  var rgb2css = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgba = unpack$6(args, 'rgba');\n    var mode = last$3(args) || 'rgb';\n\n    if (mode.substr(0, 3) == 'hsl') {\n      return hsl2css_1(rgb2hsl_1(rgba), mode);\n    }\n\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n\n    if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n      rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n      mode = 'rgba';\n    }\n\n    return mode + \"(\" + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + \")\";\n  };\n\n  var rgb2css_1 = rgb2css;\n  var unpack$7 = utils.unpack;\n  var round$1 = Math.round;\n\n  var hsl2rgb = function () {\n    var assign;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$7(args, 'hsl');\n    var h = args[0];\n    var s = args[1];\n    var l = args[2];\n    var r, g, b;\n\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      var t3 = [0, 0, 0];\n      var c = [0, 0, 0];\n      var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var t1 = 2 * l - t2;\n      var h_ = h / 360;\n      t3[0] = h_ + 1 / 3;\n      t3[1] = h_;\n      t3[2] = h_ - 1 / 3;\n\n      for (var i = 0; i < 3; i++) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n\n      assign = [round$1(c[0] * 255), round$1(c[1] * 255), round$1(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2];\n    }\n\n    if (args.length > 3) {\n      // keep alpha channel\n      return [r, g, b, args[3]];\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var hsl2rgb_1 = hsl2rgb;\n  var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n  var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var round$2 = Math.round;\n\n  var css2rgb = function (css) {\n    css = css.toLowerCase().trim();\n    var m;\n\n    if (input.format.named) {\n      try {\n        return input.format.named(css);\n      } catch (e) {// eslint-disable-next-line\n      }\n    } // rgb(250,20,0)\n\n\n    if (m = css.match(RE_RGB)) {\n      var rgb = m.slice(1, 4);\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = +rgb[i];\n      }\n\n      rgb[3] = 1; // default alpha\n\n      return rgb;\n    } // rgba(250,20,0,0.4)\n\n\n    if (m = css.match(RE_RGBA)) {\n      var rgb$1 = m.slice(1, 5);\n\n      for (var i$1 = 0; i$1 < 4; i$1++) {\n        rgb$1[i$1] = +rgb$1[i$1];\n      }\n\n      return rgb$1;\n    } // rgb(100%,0%,0%)\n\n\n    if (m = css.match(RE_RGB_PCT)) {\n      var rgb$2 = m.slice(1, 4);\n\n      for (var i$2 = 0; i$2 < 3; i$2++) {\n        rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n      }\n\n      rgb$2[3] = 1; // default alpha\n\n      return rgb$2;\n    } // rgba(100%,0%,0%,0.4)\n\n\n    if (m = css.match(RE_RGBA_PCT)) {\n      var rgb$3 = m.slice(1, 5);\n\n      for (var i$3 = 0; i$3 < 3; i$3++) {\n        rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n      }\n\n      rgb$3[3] = +rgb$3[3];\n      return rgb$3;\n    } // hsl(0,100%,50%)\n\n\n    if (m = css.match(RE_HSL)) {\n      var hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      var rgb$4 = hsl2rgb_1(hsl);\n      rgb$4[3] = 1;\n      return rgb$4;\n    } // hsla(0,100%,50%,0.5)\n\n\n    if (m = css.match(RE_HSLA)) {\n      var hsl$1 = m.slice(1, 4);\n      hsl$1[1] *= 0.01;\n      hsl$1[2] *= 0.01;\n      var rgb$5 = hsl2rgb_1(hsl$1);\n      rgb$5[3] = +m[4]; // default alpha = 1\n\n      return rgb$5;\n    }\n  };\n\n  css2rgb.test = function (s) {\n    return RE_RGB.test(s) || RE_RGBA.test(s) || RE_RGB_PCT.test(s) || RE_RGBA_PCT.test(s) || RE_HSL.test(s) || RE_HSLA.test(s);\n  };\n\n  var css2rgb_1 = css2rgb;\n  var type$3 = utils.type;\n\n  Color_1.prototype.css = function (mode) {\n    return rgb2css_1(this._rgb, mode);\n  };\n\n  chroma_1.css = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['css'])))();\n  };\n\n  input.format.css = css2rgb_1;\n  input.autodetect.push({\n    p: 5,\n    test: function (h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n        return 'css';\n      }\n    }\n  });\n  var unpack$8 = utils.unpack;\n\n  input.format.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgb = unpack$8(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n  };\n\n  chroma_1.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['gl'])))();\n  };\n\n  Color_1.prototype.gl = function () {\n    var rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  var unpack$9 = utils.unpack;\n\n  var rgb2hcg = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$9(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var c = delta * 100 / 255;\n\n    var _g = min / (255 - delta) * 100;\n\n    var h;\n\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, c, _g];\n  };\n\n  var rgb2hcg_1 = rgb2hcg;\n  var unpack$a = utils.unpack;\n  var floor = Math.floor;\n  /*\n   * this is basically just HSV with some minor tweaks\n   *\n   * hue.. [0..360]\n   * chroma .. [0..1]\n   * grayness .. [0..1]\n   */\n\n  var hcg2rgb = function () {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$a(args, 'hcg');\n    var h = args[0];\n    var c = args[1];\n    var _g = args[2];\n    var r, g, b;\n    _g = _g * 255;\n\n    var _c = c * 255;\n\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor(h);\n      var f = h - i;\n      var p = _g * (1 - c);\n      var q = p + _c * (1 - f);\n      var t = p + _c * f;\n      var v = p + _c;\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hcg2rgb_1 = hcg2rgb;\n  var unpack$b = utils.unpack;\n  var type$4 = utils.type;\n\n  Color_1.prototype.hcg = function () {\n    return rgb2hcg_1(this._rgb);\n  };\n\n  chroma_1.hcg = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hcg'])))();\n  };\n\n  input.format.hcg = hcg2rgb_1;\n  input.autodetect.push({\n    p: 1,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$b(args, 'hcg');\n\n      if (type$4(args) === 'array' && args.length === 3) {\n        return 'hcg';\n      }\n    }\n  });\n  var unpack$c = utils.unpack;\n  var last$4 = utils.last;\n  var round$3 = Math.round;\n\n  var rgb2hex = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$c(args, 'rgba');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n    var mode = last$4(args) || 'auto';\n\n    if (a === undefined) {\n      a = 1;\n    }\n\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n\n    r = round$3(r);\n    g = round$3(g);\n    b = round$3(b);\n    var u = r << 16 | g << 8 | b;\n    var str = \"000000\" + u.toString(16); //#.toUpperCase();\n\n    str = str.substr(str.length - 6);\n    var hxa = '0' + round$3(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n\n    switch (mode.toLowerCase()) {\n      case 'rgba':\n        return \"#\" + str + hxa;\n\n      case 'argb':\n        return \"#\" + hxa + str;\n\n      default:\n        return \"#\" + str;\n    }\n  };\n\n  var rgb2hex_1 = rgb2hex;\n  var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n  var hex2rgb = function (hex) {\n    if (hex.match(RE_HEX)) {\n      // remove optional leading #\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      } // expand short-notation to full six-digit\n\n\n      if (hex.length === 3) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      var u = parseInt(hex, 16);\n      var r = u >> 16;\n      var g = u >> 8 & 0xFF;\n      var b = u & 0xFF;\n      return [r, g, b, 1];\n    } // match rgba hex format, eg #FF000077\n\n\n    if (hex.match(RE_HEXA)) {\n      if (hex.length === 5 || hex.length === 9) {\n        // remove optional leading #\n        hex = hex.substr(1);\n      } // expand short-notation to full eight-digit\n\n\n      if (hex.length === 4) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n      }\n\n      var u$1 = parseInt(hex, 16);\n      var r$1 = u$1 >> 24 & 0xFF;\n      var g$1 = u$1 >> 16 & 0xFF;\n      var b$1 = u$1 >> 8 & 0xFF;\n      var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n      return [r$1, g$1, b$1, a];\n    } // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n\n    throw new Error(\"unknown hex color: \" + hex);\n  };\n\n  var hex2rgb_1 = hex2rgb;\n  var type$5 = utils.type;\n\n  Color_1.prototype.hex = function (mode) {\n    return rgb2hex_1(this._rgb, mode);\n  };\n\n  chroma_1.hex = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hex'])))();\n  };\n\n  input.format.hex = hex2rgb_1;\n  input.autodetect.push({\n    p: 4,\n    test: function (h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$5(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {\n        return 'hex';\n      }\n    }\n  });\n  var unpack$d = utils.unpack;\n  var TWOPI = utils.TWOPI;\n  var min = Math.min;\n  var sqrt = Math.sqrt;\n  var acos = Math.acos;\n\n  var rgb2hsi = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n\n\n    var ref = unpack$d(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var h;\n    var min_ = min(r, g, b);\n    var i = (r + g + b) / 3;\n    var s = i > 0 ? 1 - min_ / i : 0;\n\n    if (s === 0) {\n      h = NaN;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = acos(h);\n\n      if (b > g) {\n        h = TWOPI - h;\n      }\n\n      h /= TWOPI;\n    }\n\n    return [h * 360, s, i];\n  };\n\n  var rgb2hsi_1 = rgb2hsi;\n  var unpack$e = utils.unpack;\n  var limit$1 = utils.limit;\n  var TWOPI$1 = utils.TWOPI;\n  var PITHIRD = utils.PITHIRD;\n  var cos = Math.cos;\n  /*\n   * hue [0..360]\n   * saturation [0..1]\n   * intensity [0..1]\n   */\n\n  var hsi2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n\n\n    args = unpack$e(args, 'hsi');\n    var h = args[0];\n    var s = args[1];\n    var i = args[2];\n    var r, g, b;\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    if (isNaN(s)) {\n      s = 0;\n    } // normalize hue\n\n\n    if (h > 360) {\n      h -= 360;\n    }\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    h /= 360;\n\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      r = 1 - (g + b);\n    }\n\n    r = limit$1(i * r * 3);\n    g = limit$1(i * g * 3);\n    b = limit$1(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsi2rgb_1 = hsi2rgb;\n  var unpack$f = utils.unpack;\n  var type$6 = utils.type;\n\n  Color_1.prototype.hsi = function () {\n    return rgb2hsi_1(this._rgb);\n  };\n\n  chroma_1.hsi = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsi'])))();\n  };\n\n  input.format.hsi = hsi2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$f(args, 'hsi');\n\n      if (type$6(args) === 'array' && args.length === 3) {\n        return 'hsi';\n      }\n    }\n  });\n  var unpack$g = utils.unpack;\n  var type$7 = utils.type;\n\n  Color_1.prototype.hsl = function () {\n    return rgb2hsl_1(this._rgb);\n  };\n\n  chroma_1.hsl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsl'])))();\n  };\n\n  input.format.hsl = hsl2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$g(args, 'hsl');\n\n      if (type$7(args) === 'array' && args.length === 3) {\n        return 'hsl';\n      }\n    }\n  });\n  var unpack$h = utils.unpack;\n  var min$1 = Math.min;\n  var max$1 = Math.max;\n  /*\n   * supported arguments:\n   * - rgb2hsv(r,g,b)\n   * - rgb2hsv([r,g,b])\n   * - rgb2hsv({r,g,b})\n   */\n\n  var rgb2hsl$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$h(args, 'rgb');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var min_ = min$1(r, g, b);\n    var max_ = max$1(r, g, b);\n    var delta = max_ - min_;\n    var h, s, v;\n    v = max_ / 255.0;\n\n    if (max_ === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max_;\n\n      if (r === max_) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max_) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max_) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, s, v];\n  };\n\n  var rgb2hsv = rgb2hsl$1;\n  var unpack$i = utils.unpack;\n  var floor$1 = Math.floor;\n\n  var hsv2rgb = function () {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$i(args, 'hsv');\n    var h = args[0];\n    var s = args[1];\n    var v = args[2];\n    var r, g, b;\n    v *= 255;\n\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor$1(h);\n      var f = h - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsv2rgb_1 = hsv2rgb;\n  var unpack$j = utils.unpack;\n  var type$8 = utils.type;\n\n  Color_1.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n\n  chroma_1.hsv = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsv'])))();\n  };\n\n  input.format.hsv = hsv2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$j(args, 'hsv');\n\n      if (type$8(args) === 'array' && args.length === 3) {\n        return 'hsv';\n      }\n    }\n  });\n  var labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n    // D65 standard referent\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    // 4 / 29\n    t1: 0.206896552,\n    // 6 / 29\n    t2: 0.12841855,\n    // 3 * t1 * t1\n    t3: 0.008856452 // t1 * t1 * t1\n\n  };\n  var unpack$k = utils.unpack;\n  var pow = Math.pow;\n\n  var rgb2lab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$k(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2xyz(r, g, b);\n    var x = ref$1[0];\n    var y = ref$1[1];\n    var z = ref$1[2];\n    var l = 116 * y - 16;\n    return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n  };\n\n  var rgb_xyz = function (r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    }\n\n    return pow((r + 0.055) / 1.055, 2.4);\n  };\n\n  var xyz_lab = function (t) {\n    if (t > labConstants.t3) {\n      return pow(t, 1 / 3);\n    }\n\n    return t / labConstants.t2 + labConstants.t0;\n  };\n\n  var rgb2xyz = function (r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n    return [x, y, z];\n  };\n\n  var rgb2lab_1 = rgb2lab;\n  var unpack$l = utils.unpack;\n  var pow$1 = Math.pow;\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n\n  var lab2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$l(args, 'lab');\n    var l = args[0];\n    var a = args[1];\n    var b = args[2];\n    var x, y, z, r, g, b_;\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = labConstants.Yn * lab_xyz(y);\n    x = labConstants.Xn * lab_xyz(x);\n    z = labConstants.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n  };\n\n  var xyz_rgb = function (r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055);\n  };\n\n  var lab_xyz = function (t) {\n    return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0);\n  };\n\n  var lab2rgb_1 = lab2rgb;\n  var unpack$m = utils.unpack;\n  var type$9 = utils.type;\n\n  Color_1.prototype.lab = function () {\n    return rgb2lab_1(this._rgb);\n  };\n\n  chroma_1.lab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['lab'])))();\n  };\n\n  input.format.lab = lab2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$m(args, 'lab');\n\n      if (type$9(args) === 'array' && args.length === 3) {\n        return 'lab';\n      }\n    }\n  });\n  var unpack$n = utils.unpack;\n  var RAD2DEG = utils.RAD2DEG;\n  var sqrt$1 = Math.sqrt;\n  var atan2 = Math.atan2;\n  var round$4 = Math.round;\n\n  var lab2lch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$n(args, 'lab');\n    var l = ref[0];\n    var a = ref[1];\n    var b = ref[2];\n    var c = sqrt$1(a * a + b * b);\n    var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n\n    if (round$4(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n\n    return [l, c, h];\n  };\n\n  var lab2lch_1 = lab2lch;\n  var unpack$o = utils.unpack;\n\n  var rgb2lch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$o(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2lab_1(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch_1(l, a, b_);\n  };\n\n  var rgb2lch_1 = rgb2lch;\n  var unpack$p = utils.unpack;\n  var DEG2RAD = utils.DEG2RAD;\n  var sin = Math.sin;\n  var cos$1 = Math.cos;\n\n  var lch2lab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n     A saturation multiplier was added by Gregor Aisch\n    */\n\n\n    var ref = unpack$p(args, 'lch');\n    var l = ref[0];\n    var c = ref[1];\n    var h = ref[2];\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    h = h * DEG2RAD;\n    return [l, cos$1(h) * c, sin(h) * c];\n  };\n\n  var lch2lab_1 = lch2lab;\n  var unpack$q = utils.unpack;\n\n  var lch2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$q(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab_1(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = lab2rgb_1(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var lch2rgb_1 = lch2rgb;\n  var unpack$r = utils.unpack;\n\n  var hcl2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var hcl = unpack$r(args, 'hcl').reverse();\n    return lch2rgb_1.apply(void 0, hcl);\n  };\n\n  var hcl2rgb_1 = hcl2rgb;\n  var unpack$s = utils.unpack;\n  var type$a = utils.type;\n\n  Color_1.prototype.lch = function () {\n    return rgb2lch_1(this._rgb);\n  };\n\n  Color_1.prototype.hcl = function () {\n    return rgb2lch_1(this._rgb).reverse();\n  };\n\n  chroma_1.lch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['lch'])))();\n  };\n\n  chroma_1.hcl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hcl'])))();\n  };\n\n  input.format.lch = lch2rgb_1;\n  input.format.hcl = hcl2rgb_1;\n  ['lch', 'hcl'].forEach(function (m) {\n    return input.autodetect.push({\n      p: 2,\n      test: function () {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) args[len] = arguments[len];\n\n        args = unpack$s(args, m);\n\n        if (type$a(args) === 'array' && args.length === 3) {\n          return m;\n        }\n      }\n    });\n  });\n  /**\n  \tX11 color names\n   \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n  var w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n  var w3cx11_1 = w3cx11;\n  var type$b = utils.type;\n\n  Color_1.prototype.name = function () {\n    var hex = rgb2hex_1(this._rgb, 'rgb');\n\n    for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n      var n = list[i];\n\n      if (w3cx11_1[n] === hex) {\n        return n.toLowerCase();\n      }\n    }\n\n    return hex;\n  };\n\n  input.format.named = function (name) {\n    name = name.toLowerCase();\n\n    if (w3cx11_1[name]) {\n      return hex2rgb_1(w3cx11_1[name]);\n    }\n\n    throw new Error('unknown color name: ' + name);\n  };\n\n  input.autodetect.push({\n    p: 5,\n    test: function (h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n        return 'named';\n      }\n    }\n  });\n  var unpack$t = utils.unpack;\n\n  var rgb2num = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$t(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  var rgb2num_1 = rgb2num;\n  var type$c = utils.type;\n\n  var num2rgb = function (num) {\n    if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      var r = num >> 16;\n      var g = num >> 8 & 0xFF;\n      var b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    throw new Error(\"unknown num color: \" + num);\n  };\n\n  var num2rgb_1 = num2rgb;\n  var type$d = utils.type;\n\n  Color_1.prototype.num = function () {\n    return rgb2num_1(this._rgb);\n  };\n\n  chroma_1.num = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['num'])))();\n  };\n\n  input.format.num = num2rgb_1;\n  input.autodetect.push({\n    p: 5,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n  var unpack$u = utils.unpack;\n  var type$e = utils.type;\n  var round$5 = Math.round;\n\n  Color_1.prototype.rgb = function (rnd) {\n    if (rnd === void 0) rnd = true;\n\n    if (rnd === false) {\n      return this._rgb.slice(0, 3);\n    }\n\n    return this._rgb.slice(0, 3).map(round$5);\n  };\n\n  Color_1.prototype.rgba = function (rnd) {\n    if (rnd === void 0) rnd = true;\n    return this._rgb.slice(0, 4).map(function (v, i) {\n      return i < 3 ? rnd === false ? v : round$5(v) : v;\n    });\n  };\n\n  chroma_1.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['rgb'])))();\n  };\n\n  input.format.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgba = unpack$u(args, 'rgba');\n\n    if (rgba[3] === undefined) {\n      rgba[3] = 1;\n    }\n\n    return rgba;\n  };\n\n  input.autodetect.push({\n    p: 3,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$u(args, 'rgba');\n\n      if (type$e(args) === 'array' && (args.length === 3 || args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n        return 'rgb';\n      }\n    }\n  });\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   */\n\n  var log = Math.log;\n\n  var temperature2rgb = function (kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var temperature2rgb_1 = temperature2rgb;\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   **/\n\n  var unpack$v = utils.unpack;\n  var round$6 = Math.round;\n\n  var rgb2temperature = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgb = unpack$v(args, 'rgb');\n    var r = rgb[0],\n        b = rgb[2];\n    var minTemp = 1000;\n    var maxTemp = 40000;\n    var eps = 0.4;\n    var temp;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      var rgb$1 = temperature2rgb_1(temp);\n\n      if (rgb$1[2] / rgb$1[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return round$6(temp);\n  };\n\n  var rgb2temperature_1 = rgb2temperature;\n\n  Color_1.prototype.temp = Color_1.prototype.kelvin = Color_1.prototype.temperature = function () {\n    return rgb2temperature_1(this._rgb);\n  };\n\n  chroma_1.temp = chroma_1.kelvin = chroma_1.temperature = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['temp'])))();\n  };\n\n  input.format.temp = input.format.kelvin = input.format.temperature = temperature2rgb_1;\n  var type$f = utils.type;\n\n  Color_1.prototype.alpha = function (a, mutate) {\n    if (mutate === void 0) mutate = false;\n\n    if (a !== undefined && type$f(a) === 'number') {\n      if (mutate) {\n        this._rgb[3] = a;\n        return this;\n      }\n\n      return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n\n    return this._rgb[3];\n  };\n\n  Color_1.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n\n  Color_1.prototype.darken = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lab = me.lab();\n    lab[0] -= labConstants.Kn * amount;\n    return new Color_1(lab, 'lab').alpha(me.alpha(), true);\n  };\n\n  Color_1.prototype.brighten = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.darken(-amount);\n  };\n\n  Color_1.prototype.darker = Color_1.prototype.darken;\n  Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n  Color_1.prototype.get = function (mc) {\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel);\n\n      if (i > -1) {\n        return src[i];\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var type$g = utils.type;\n  var pow$2 = Math.pow;\n  var EPS = 1e-7;\n  var MAX_ITER = 20;\n\n  Color_1.prototype.luminance = function (lum) {\n    if (lum !== undefined && type$g(lum) === 'number') {\n      if (lum === 0) {\n        // return pure black\n        return new Color_1([0, 0, 0, this._rgb[3]], 'rgb');\n      }\n\n      if (lum === 1) {\n        // return pure white\n        return new Color_1([255, 255, 255, this._rgb[3]], 'rgb');\n      } // compute new color using...\n\n\n      var cur_lum = this.luminance();\n      var mode = 'rgb';\n      var max_iter = MAX_ITER;\n\n      var test = function (low, high) {\n        var mid = low.interpolate(high, 0.5, mode);\n        var lm = mid.luminance();\n\n        if (Math.abs(lum - lm) < EPS || !max_iter--) {\n          // close enough\n          return mid;\n        }\n\n        return lm > lum ? test(low, mid) : test(mid, high);\n      };\n\n      var rgb = (cur_lum > lum ? test(new Color_1([0, 0, 0]), this) : test(this, new Color_1([255, 255, 255]))).rgb();\n      return new Color_1(rgb.concat([this._rgb[3]]));\n    }\n\n    return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\n  };\n\n  var rgb2luminance = function (r, g, b) {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  var luminance_x = function (x) {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow$2((x + 0.055) / 1.055, 2.4);\n  };\n\n  var interpolator = {};\n  var type$h = utils.type;\n\n  var mix = function (col1, col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 3;\n\n    while (len-- > 0) rest[len] = arguments[len + 3];\n\n    var mode = rest[0] || 'lrgb';\n\n    if (!interpolator[mode] && !rest.length) {\n      // fall back to the first supported mode\n      mode = Object.keys(interpolator)[0];\n    }\n\n    if (!interpolator[mode]) {\n      throw new Error(\"interpolation mode \" + mode + \" is not defined\");\n    }\n\n    if (type$h(col1) !== 'object') {\n      col1 = new Color_1(col1);\n    }\n\n    if (type$h(col2) !== 'object') {\n      col2 = new Color_1(col2);\n    }\n\n    return interpolator[mode](col1, col2, f).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  Color_1.prototype.mix = Color_1.prototype.interpolate = function (col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 2;\n\n    while (len-- > 0) rest[len] = arguments[len + 2];\n\n    return mix.apply(void 0, [this, col2, f].concat(rest));\n  };\n\n  Color_1.prototype.premultiply = function (mutate) {\n    if (mutate === void 0) mutate = false;\n    var rgb = this._rgb;\n    var a = rgb[3];\n\n    if (mutate) {\n      this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n      return this;\n    } else {\n      return new Color_1([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n  };\n\n  Color_1.prototype.saturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lch = me.lch();\n    lch[1] += labConstants.Kn * amount;\n\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n\n    return new Color_1(lch, 'lch').alpha(me.alpha(), true);\n  };\n\n  Color_1.prototype.desaturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.saturate(-amount);\n  };\n\n  var type$i = utils.type;\n\n  Color_1.prototype.set = function (mc, value, mutate) {\n    if (mutate === void 0) mutate = false;\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel);\n\n      if (i > -1) {\n        if (type$i(value) == 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n\n            case '-':\n              src[i] += +value;\n              break;\n\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n\n            default:\n              src[i] = +value;\n          }\n        } else if (type$i(value) === 'number') {\n          src[i] = value;\n        } else {\n          throw new Error(\"unsupported value for Color.set\");\n        }\n\n        var out = new Color_1(src, mode);\n\n        if (mutate) {\n          this._rgb = out._rgb;\n          return this;\n        }\n\n        return out;\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var rgb$1 = function (col1, col2, f) {\n    var xyz0 = col1._rgb;\n    var xyz1 = col2._rgb;\n    return new Color_1(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'rgb');\n  }; // register interpolator\n\n\n  interpolator.rgb = rgb$1;\n  var sqrt$2 = Math.sqrt;\n  var pow$3 = Math.pow;\n\n  var lrgb = function (col1, col2, f) {\n    var ref = col1._rgb;\n    var x1 = ref[0];\n    var y1 = ref[1];\n    var z1 = ref[2];\n    var ref$1 = col2._rgb;\n    var x2 = ref$1[0];\n    var y2 = ref$1[1];\n    var z2 = ref$1[2];\n    return new Color_1(sqrt$2(pow$3(x1, 2) * (1 - f) + pow$3(x2, 2) * f), sqrt$2(pow$3(y1, 2) * (1 - f) + pow$3(y2, 2) * f), sqrt$2(pow$3(z1, 2) * (1 - f) + pow$3(z2, 2) * f), 'rgb');\n  }; // register interpolator\n\n\n  interpolator.lrgb = lrgb;\n\n  var lab$1 = function (col1, col2, f) {\n    var xyz0 = col1.lab();\n    var xyz1 = col2.lab();\n    return new Color_1(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'lab');\n  }; // register interpolator\n\n\n  interpolator.lab = lab$1;\n\n  var _hsx = function (col1, col2, f, m) {\n    var assign, assign$1;\n    var xyz0, xyz1;\n\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n\n    var hue0, hue1, sat0, sat1, lbv0, lbv1;\n\n    if (m.substr(0, 1) === 'h') {\n      assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2];\n      assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2];\n    }\n\n    var sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      // both colors have hue\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n\n      if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n\n      if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n\n    if (sat === undefined) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return new Color_1([hue, sat, lbv], m);\n  };\n\n  var lch$1 = function (col1, col2, f) {\n    return _hsx(col1, col2, f, 'lch');\n  }; // register interpolator\n\n\n  interpolator.lch = lch$1;\n  interpolator.hcl = lch$1;\n\n  var num$1 = function (col1, col2, f) {\n    var c1 = col1.num();\n    var c2 = col2.num();\n    return new Color_1(c1 + f * (c2 - c1), 'num');\n  }; // register interpolator\n\n\n  interpolator.num = num$1;\n\n  var hcg$1 = function (col1, col2, f) {\n    return _hsx(col1, col2, f, 'hcg');\n  }; // register interpolator\n\n\n  interpolator.hcg = hcg$1;\n\n  var hsi$1 = function (col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsi');\n  }; // register interpolator\n\n\n  interpolator.hsi = hsi$1;\n\n  var hsl$1 = function (col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsl');\n  }; // register interpolator\n\n\n  interpolator.hsl = hsl$1;\n\n  var hsv$1 = function (col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsv');\n  }; // register interpolator\n\n\n  interpolator.hsv = hsv$1;\n  var clip_rgb$2 = utils.clip_rgb;\n  var pow$4 = Math.pow;\n  var sqrt$3 = Math.sqrt;\n  var PI$1 = Math.PI;\n  var cos$2 = Math.cos;\n  var sin$1 = Math.sin;\n  var atan2$1 = Math.atan2;\n\n  var average = function (colors, mode, weights) {\n    if (mode === void 0) mode = 'lrgb';\n    if (weights === void 0) weights = null;\n    var l = colors.length;\n\n    if (!weights) {\n      weights = Array.from(new Array(l)).map(function () {\n        return 1;\n      });\n    } // normalize weights\n\n\n    var k = l / weights.reduce(function (a, b) {\n      return a + b;\n    });\n    weights.forEach(function (w, i) {\n      weights[i] *= k;\n    }); // convert colors to Color objects\n\n    colors = colors.map(function (c) {\n      return new Color_1(c);\n    });\n\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors, weights);\n    }\n\n    var first = colors.shift();\n    var xyz = first.get(mode);\n    var cnt = [];\n    var dx = 0;\n    var dy = 0; // initial color\n\n    for (var i = 0; i < xyz.length; i++) {\n      xyz[i] = (xyz[i] || 0) * weights[0];\n      cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        var A = xyz[i] / 180 * PI$1;\n        dx += cos$2(A) * weights[0];\n        dy += sin$1(A) * weights[0];\n      }\n    }\n\n    var alpha = first.alpha() * weights[0];\n    colors.forEach(function (c, ci) {\n      var xyz2 = c.get(mode);\n      alpha += c.alpha() * weights[ci + 1];\n\n      for (var i = 0; i < xyz.length; i++) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += weights[ci + 1];\n\n          if (mode.charAt(i) === 'h') {\n            var A = xyz2[i] / 180 * PI$1;\n            dx += cos$2(A) * weights[ci + 1];\n            dy += sin$1(A) * weights[ci + 1];\n          } else {\n            xyz[i] += xyz2[i] * weights[ci + 1];\n          }\n        }\n      }\n    });\n\n    for (var i$1 = 0; i$1 < xyz.length; i$1++) {\n      if (mode.charAt(i$1) === 'h') {\n        var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n\n        while (A$1 < 0) {\n          A$1 += 360;\n        }\n\n        while (A$1 >= 360) {\n          A$1 -= 360;\n        }\n\n        xyz[i$1] = A$1;\n      } else {\n        xyz[i$1] = xyz[i$1] / cnt[i$1];\n      }\n    }\n\n    alpha /= l;\n    return new Color_1(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n  };\n\n  var _average_lrgb = function (colors, weights) {\n    var l = colors.length;\n    var xyz = [0, 0, 0, 0];\n\n    for (var i = 0; i < colors.length; i++) {\n      var col = colors[i];\n      var f = weights[i] / l;\n      var rgb = col._rgb;\n      xyz[0] += pow$4(rgb[0], 2) * f;\n      xyz[1] += pow$4(rgb[1], 2) * f;\n      xyz[2] += pow$4(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n\n    xyz[0] = sqrt$3(xyz[0]);\n    xyz[1] = sqrt$3(xyz[1]);\n    xyz[2] = sqrt$3(xyz[2]);\n\n    if (xyz[3] > 0.9999999) {\n      xyz[3] = 1;\n    }\n\n    return new Color_1(clip_rgb$2(xyz));\n  }; // minimal multi-purpose interface\n  // @requires utils color analyze\n\n\n  var type$j = utils.type;\n  var pow$5 = Math.pow;\n\n  var scale = function (colors) {\n    // constructor\n    var _mode = 'rgb';\n\n    var _nacol = chroma_1('#ccc');\n\n    var _spread = 0; // const _fixed = false;\n\n    var _domain = [0, 1];\n    var _pos = [];\n    var _padding = [0, 0];\n    var _classes = false;\n    var _colors = [];\n    var _out = false;\n    var _min = 0;\n    var _max = 1;\n    var _correctLightness = false;\n    var _colorCache = {};\n    var _useCache = true;\n    var _gamma = 1; // private methods\n\n    var setColors = function (colors) {\n      colors = colors || ['#fff', '#000'];\n\n      if (colors && type$j(colors) === 'string' && chroma_1.brewer && chroma_1.brewer[colors.toLowerCase()]) {\n        colors = chroma_1.brewer[colors.toLowerCase()];\n      }\n\n      if (type$j(colors) === 'array') {\n        // handle single color\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        } // make a copy of the colors\n\n\n        colors = colors.slice(0); // convert to chroma classes\n\n        for (var c = 0; c < colors.length; c++) {\n          colors[c] = chroma_1(colors[c]);\n        } // auto-fill color position\n\n\n        _pos.length = 0;\n\n        for (var c$1 = 0; c$1 < colors.length; c$1++) {\n          _pos.push(c$1 / (colors.length - 1));\n        }\n      }\n\n      resetCache();\n      return _colors = colors;\n    };\n\n    var getClass = function (value) {\n      if (_classes != null) {\n        var n = _classes.length - 1;\n        var i = 0;\n\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n\n        return i - 1;\n      }\n\n      return 0;\n    };\n\n    var tMapLightness = function (t) {\n      return t;\n    };\n\n    var tMapDomain = function (t) {\n      return t;\n    }; // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n\n    var getColor = function (val, bypassMap) {\n      var col, t;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          // find the class\n          var c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          // just interpolate between min/max\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      } // domain map\n\n\n      t = tMapDomain(t);\n\n      if (!bypassMap) {\n        t = tMapLightness(t); // lightness correction\n      }\n\n      if (_gamma !== 1) {\n        t = pow$5(t, _gamma);\n      }\n\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n      t = Math.min(1, Math.max(0, t));\n      var k = Math.floor(t * 10000);\n\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type$j(_colors) === 'array') {\n          //for i in [0.._pos.length-1]\n          for (var i = 0; i < _pos.length; i++) {\n            var p = _pos[i];\n\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma_1.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type$j(_colors) === 'function') {\n          col = _colors(t);\n        }\n\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n\n      return col;\n    };\n\n    var resetCache = function () {\n      return _colorCache = {};\n    };\n\n    setColors(colors); // public interface\n\n    var f = function (v) {\n      var c = chroma_1(getColor(v));\n\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n\n    f.classes = function (classes) {\n      if (classes != null) {\n        if (type$j(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          var d = chroma_1.analyze(_domain);\n\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma_1.limits(d, 'e', classes);\n          }\n        }\n\n        return f;\n      }\n\n      return _classes;\n    };\n\n    f.domain = function (domain) {\n      if (!arguments.length) {\n        return _domain;\n      }\n\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      var k = _colors.length;\n\n      if (domain.length === k && _min !== _max) {\n        // update positions\n        for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n          var d = list[i];\n\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (var c = 0; c < k; c++) {\n          _pos.push(c / (k - 1));\n        }\n\n        if (domain.length > 2) {\n          // set domain map\n          var tOut = domain.map(function (d, i) {\n            return i / (domain.length - 1);\n          });\n          var tBreaks = domain.map(function (d) {\n            return (d - _min) / (_max - _min);\n          });\n\n          if (!tBreaks.every(function (val, i) {\n            return tOut[i] === val;\n          })) {\n            tMapDomain = function (t) {\n              if (t <= 0 || t >= 1) {\n                return t;\n              }\n\n              var i = 0;\n\n              while (t >= tBreaks[i + 1]) {\n                i++;\n              }\n\n              var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n              var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n              return out;\n            };\n          }\n        }\n      }\n\n      _domain = [_min, _max];\n      return f;\n    };\n\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n\n    f.range = function (colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n\n      _spread = val;\n      return f;\n    };\n\n    f.correctLightness = function (v) {\n      if (v == null) {\n        v = true;\n      }\n\n      _correctLightness = v;\n      resetCache();\n\n      if (_correctLightness) {\n        tMapLightness = function (t) {\n          var L0 = getColor(0, true).lab()[0];\n          var L1 = getColor(1, true).lab()[0];\n          var pol = L0 > L1;\n          var L_actual = getColor(t, true).lab()[0];\n          var L_ideal = L0 + (L1 - L0) * t;\n          var L_diff = L_actual - L_ideal;\n          var t0 = 0;\n          var t1 = 1;\n          var max_iter = 20;\n\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {\n                L_diff *= -1;\n              }\n\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n\n          return t;\n        };\n      } else {\n        tMapLightness = function (t) {\n          return t;\n        };\n      }\n\n      return f;\n    };\n\n    f.padding = function (p) {\n      if (p != null) {\n        if (type$j(p) === 'number') {\n          p = [p, p];\n        }\n\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n\n    f.colors = function (numColors, out) {\n      // If no arguments are given, return the original colors that were provided\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n\n      var result = [];\n\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        var dm = _domain[0];\n        var dd = _domain[1] - dm;\n        result = __range__(0, numColors, false).map(function (i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        // returns all colors based on the defined classes\n        colors = [];\n        var samples = [];\n\n        if (_classes && _classes.length > 2) {\n          for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n\n        result = samples.map(function (v) {\n          return f(v);\n        });\n      }\n\n      if (chroma_1[out]) {\n        result = result.map(function (c) {\n          return c[out]();\n        });\n      }\n\n      return result;\n    };\n\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma_1(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n\n    return f;\n  };\n\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n\n    return range;\n  } //\n  // interpolates between a set of colors uzing a bezier spline\n  //\n  // @requires utils lab\n\n\n  var bezier = function (colors) {\n    var assign, assign$1, assign$2;\n    var I, lab0, lab1, lab2;\n    colors = colors.map(function (c) {\n      return new Color_1(c);\n    });\n\n    if (colors.length === 2) {\n      // linear interpolation\n      assign = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign[0], lab1 = assign[1];\n\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return lab0[i] + t * (lab1[i] - lab0[i]);\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 3) {\n      // quadratic bezier interpolation\n      assign$1 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2];\n\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i];\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 4) {\n      // cubic bezier interpolation\n      var lab3;\n      assign$2 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3];\n\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i];\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 5) {\n      var I0 = bezier(colors.slice(0, 3));\n      var I1 = bezier(colors.slice(2, 5));\n\n      I = function (t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n\n    return I;\n  };\n\n  var bezier_1 = function (colors) {\n    var f = bezier(colors);\n\n    f.scale = function () {\n      return scale(f);\n    };\n\n    return f;\n  };\n  /*\n   * interpolates between a set of colors uzing a bezier spline\n   * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n   */\n\n\n  var blend = function (bottom, top, mode) {\n    if (!blend[mode]) {\n      throw new Error('unknown blend mode ' + mode);\n    }\n\n    return blend[mode](bottom, top);\n  };\n\n  var blend_f = function (f) {\n    return function (bottom, top) {\n      var c0 = chroma_1(top).rgb();\n      var c1 = chroma_1(bottom).rgb();\n      return chroma_1.rgb(f(c0, c1));\n    };\n  };\n\n  var each = function (f) {\n    return function (c0, c1) {\n      var out = [];\n      out[0] = f(c0[0], c1[0]);\n      out[1] = f(c0[1], c1[1]);\n      out[2] = f(c0[2], c1[2]);\n      return out;\n    };\n  };\n\n  var normal = function (a) {\n    return a;\n  };\n\n  var multiply = function (a, b) {\n    return a * b / 255;\n  };\n\n  var darken$1 = function (a, b) {\n    return a > b ? b : a;\n  };\n\n  var lighten = function (a, b) {\n    return a > b ? a : b;\n  };\n\n  var screen = function (a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  var overlay = function (a, b) {\n    return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n  };\n\n  var burn = function (a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  var dodge = function (a, b) {\n    if (a === 255) {\n      return 255;\n    }\n\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  }; // # add = (a,b) ->\n  // #     if (a + b > 255) then 255 else a + b\n\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken$1));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn)); // blend.add = blend_f(each(add));\n\n  var blend_1 = blend; // cubehelix interpolation\n  // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n  // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n  var type$k = utils.type;\n  var clip_rgb$3 = utils.clip_rgb;\n  var TWOPI$2 = utils.TWOPI;\n  var pow$6 = Math.pow;\n  var sin$2 = Math.sin;\n  var cos$3 = Math.cos;\n\n  var cubehelix = function (start, rotations, hue, gamma, lightness) {\n    if (start === void 0) start = 300;\n    if (rotations === void 0) rotations = -1.5;\n    if (hue === void 0) hue = 1;\n    if (gamma === void 0) gamma = 1;\n    if (lightness === void 0) lightness = [0, 1];\n    var dh = 0,\n        dl;\n\n    if (type$k(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n\n    var f = function (fract) {\n      var a = TWOPI$2 * ((start + 120) / 360 + rotations * fract);\n      var l = pow$6(lightness[0] + dl * fract, gamma);\n      var h = dh !== 0 ? hue[0] + fract * dh : hue;\n      var amp = h * l * (1 - l) / 2;\n      var cos_a = cos$3(a);\n      var sin_a = sin$2(a);\n      var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      var b = l + amp * (+1.97294 * cos_a);\n      return chroma_1(clip_rgb$3([r * 255, g * 255, b * 255, 1]));\n    };\n\n    f.start = function (s) {\n      if (s == null) {\n        return start;\n      }\n\n      start = s;\n      return f;\n    };\n\n    f.rotations = function (r) {\n      if (r == null) {\n        return rotations;\n      }\n\n      rotations = r;\n      return f;\n    };\n\n    f.gamma = function (g) {\n      if (g == null) {\n        return gamma;\n      }\n\n      gamma = g;\n      return f;\n    };\n\n    f.hue = function (h) {\n      if (h == null) {\n        return hue;\n      }\n\n      hue = h;\n\n      if (type$k(hue) === 'array') {\n        dh = hue[1] - hue[0];\n\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n\n      return f;\n    };\n\n    f.lightness = function (h) {\n      if (h == null) {\n        return lightness;\n      }\n\n      if (type$k(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n\n      return f;\n    };\n\n    f.scale = function () {\n      return chroma_1.scale(f);\n    };\n\n    f.hue(hue);\n    return f;\n  };\n\n  var digits = '0123456789abcdef';\n  var floor$2 = Math.floor;\n  var random = Math.random;\n\n  var random_1 = function () {\n    var code = '#';\n\n    for (var i = 0; i < 6; i++) {\n      code += digits.charAt(floor$2(random() * 16));\n    }\n\n    return new Color_1(code, 'hex');\n  };\n\n  var log$1 = Math.log;\n  var pow$7 = Math.pow;\n  var floor$3 = Math.floor;\n  var abs = Math.abs;\n\n  var analyze = function (data, key) {\n    if (key === void 0) key = null;\n    var r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n\n    if (type(data) === 'object') {\n      data = Object.values(data);\n    }\n\n    data.forEach(function (val) {\n      if (key && type(val) === 'object') {\n        val = val[key];\n      }\n\n      if (val !== undefined && val !== null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n\n        if (val < r.min) {\n          r.min = val;\n        }\n\n        if (val > r.max) {\n          r.max = val;\n        }\n\n        r.count += 1;\n      }\n    });\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {\n      return limits(r, mode, num);\n    };\n\n    return r;\n  };\n\n  var limits = function (data, mode, num) {\n    if (mode === void 0) mode = 'equal';\n    if (num === void 0) num = 7;\n\n    if (type(data) == 'array') {\n      data = analyze(data);\n    }\n\n    var min = data.min;\n    var max = data.max;\n    var values = data.values.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (num === 1) {\n      return [min, max];\n    }\n\n    var limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n      // continuous\n      limits.push(min);\n      limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n      // equal interval\n      limits.push(min);\n\n      for (var i = 1; i < num; i++) {\n        limits.push(min + i / num * (max - min));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      // log scale\n      if (min <= 0) {\n        throw new Error('Logarithmic scales are only possible for values > 0');\n      }\n\n      var min_log = Math.LOG10E * log$1(min);\n      var max_log = Math.LOG10E * log$1(max);\n      limits.push(min);\n\n      for (var i$1 = 1; i$1 < num; i$1++) {\n        limits.push(pow$7(10, min_log + i$1 / num * (max_log - min_log)));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      // quantile scale\n      limits.push(min);\n\n      for (var i$2 = 1; i$2 < num; i$2++) {\n        var p = (values.length - 1) * i$2 / num;\n        var pb = floor$3(p);\n\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          // p > pb\n          var pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      // k-means clustering\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n      var cluster;\n      var n = values.length;\n      var assignments = new Array(n);\n      var clusterSizes = new Array(num);\n      var repeat = true;\n      var nb_iters = 0;\n      var centroids = null; // get seed values\n\n      centroids = [];\n      centroids.push(min);\n\n      for (var i$3 = 1; i$3 < num; i$3++) {\n        centroids.push(min + i$3 / num * (max - min));\n      }\n\n      centroids.push(max);\n\n      while (repeat) {\n        // assignment step\n        for (var j = 0; j < num; j++) {\n          clusterSizes[j] = 0;\n        }\n\n        for (var i$4 = 0; i$4 < n; i$4++) {\n          var value = values[i$4];\n          var mindist = Number.MAX_VALUE;\n          var best = void 0;\n\n          for (var j$1 = 0; j$1 < num; j$1++) {\n            var dist = abs(centroids[j$1] - value);\n\n            if (dist < mindist) {\n              mindist = dist;\n              best = j$1;\n            }\n\n            clusterSizes[best]++;\n            assignments[i$4] = best;\n          }\n        } // update centroids step\n\n\n        var newCentroids = new Array(num);\n\n        for (var j$2 = 0; j$2 < num; j$2++) {\n          newCentroids[j$2] = null;\n        }\n\n        for (var i$5 = 0; i$5 < n; i$5++) {\n          cluster = assignments[i$5];\n\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i$5];\n          } else {\n            newCentroids[cluster] += values[i$5];\n          }\n        }\n\n        for (var j$3 = 0; j$3 < num; j$3++) {\n          newCentroids[j$3] *= 1 / clusterSizes[j$3];\n        } // check convergence\n\n\n        repeat = false;\n\n        for (var j$4 = 0; j$4 < num; j$4++) {\n          if (newCentroids[j$4] !== centroids[j$4]) {\n            repeat = true;\n            break;\n          }\n        }\n\n        centroids = newCentroids;\n        nb_iters++;\n\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      } // finished k-means clustering\n      // the next part is borrowed from gabrielflor.it\n\n\n      var kClusters = {};\n\n      for (var j$5 = 0; j$5 < num; j$5++) {\n        kClusters[j$5] = [];\n      }\n\n      for (var i$6 = 0; i$6 < n; i$6++) {\n        cluster = assignments[i$6];\n        kClusters[cluster].push(values[i$6]);\n      }\n\n      var tmpKMeansBreaks = [];\n\n      for (var j$6 = 0; j$6 < num; j$6++) {\n        tmpKMeansBreaks.push(kClusters[j$6][0]);\n        tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\n      }\n\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n\n      for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\n        var v = tmpKMeansBreaks[i$7];\n\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n\n    return limits;\n  };\n\n  var analyze_1 = {\n    analyze: analyze,\n    limits: limits\n  };\n\n  var contrast = function (a, b) {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var l1 = a.luminance();\n    var l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n  };\n\n  var sqrt$4 = Math.sqrt;\n  var atan2$2 = Math.atan2;\n  var abs$1 = Math.abs;\n  var cos$4 = Math.cos;\n  var PI$2 = Math.PI;\n\n  var deltaE = function (a, b, L, C) {\n    if (L === void 0) L = 1;\n    if (C === void 0) C = 1; // Delta E (CMC)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var ref = Array.from(a.lab());\n    var L1 = ref[0];\n    var a1 = ref[1];\n    var b1 = ref[2];\n    var ref$1 = Array.from(b.lab());\n    var L2 = ref$1[0];\n    var a2 = ref$1[1];\n    var b2 = ref$1[2];\n    var c1 = sqrt$4(a1 * a1 + b1 * b1);\n    var c2 = sqrt$4(a2 * a2 + b2 * b2);\n    var sl = L1 < 16.0 ? 0.511 : 0.040975 * L1 / (1.0 + 0.01765 * L1);\n    var sc = 0.0638 * c1 / (1.0 + 0.0131 * c1) + 0.638;\n    var h1 = c1 < 0.000001 ? 0.0 : atan2$2(b1, a1) * 180.0 / PI$2;\n\n    while (h1 < 0) {\n      h1 += 360;\n    }\n\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n\n    var t = h1 >= 164.0 && h1 <= 345.0 ? 0.56 + abs$1(0.2 * cos$4(PI$2 * (h1 + 168.0) / 180.0)) : 0.36 + abs$1(0.4 * cos$4(PI$2 * (h1 + 35.0) / 180.0));\n    var c4 = c1 * c1 * c1 * c1;\n    var f = sqrt$4(c4 / (c4 + 1900.0));\n    var sh = sc * (f * t + 1.0 - f);\n    var delL = L1 - L2;\n    var delC = c1 - c2;\n    var delA = a1 - a2;\n    var delB = b1 - b2;\n    var dH2 = delA * delA + delB * delB - delC * delC;\n    var v1 = delL / (L * sl);\n    var v2 = delC / (C * sc);\n    var v3 = sh;\n    return sqrt$4(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));\n  }; // simple Euclidean distance\n\n\n  var distance = function (a, b, mode) {\n    if (mode === void 0) mode = 'lab'; // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var l1 = a.get(mode);\n    var l2 = b.get(mode);\n    var sum_sq = 0;\n\n    for (var i in l1) {\n      var d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n\n    return Math.sqrt(sum_sq);\n  };\n\n  var valid = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    try {\n      new (Function.prototype.bind.apply(Color_1, [null].concat(args)))();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }; // some pre-defined color scales:\n\n\n  var scales = {\n    cool: function cool() {\n      return scale([chroma_1.hsl(180, 1, .9), chroma_1.hsl(250, .7, .4)]);\n    },\n    hot: function hot() {\n      return scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n    }\n  };\n  /**\n      ColorBrewer colors for chroma.js\n       Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n      Pennsylvania State University.\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n       Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  */\n\n  var colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  }; // add lowercase aliases for case-insensitive matches\n\n  for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n    var key = list$1[i$1];\n    colorbrewer[key.toLowerCase()] = colorbrewer[key];\n  }\n\n  var colorbrewer_1 = colorbrewer; // feel free to comment out anything to rollup\n  // a smaller chroma.js built\n  // io --> convert colors\n  // operators --> modify existing Colors\n  // interpolators\n  // generators -- > create new colors\n\n  chroma_1.average = average;\n  chroma_1.bezier = bezier_1;\n  chroma_1.blend = blend_1;\n  chroma_1.cubehelix = cubehelix;\n  chroma_1.mix = chroma_1.interpolate = mix;\n  chroma_1.random = random_1;\n  chroma_1.scale = scale; // other utility methods\n\n  chroma_1.analyze = analyze_1.analyze;\n  chroma_1.contrast = contrast;\n  chroma_1.deltaE = deltaE;\n  chroma_1.distance = distance;\n  chroma_1.limits = analyze_1.limits;\n  chroma_1.valid = valid; // scale\n\n  chroma_1.scales = scales; // colors\n\n  chroma_1.colors = w3cx11_1;\n  chroma_1.brewer = colorbrewer_1;\n  var chroma_js = chroma_1;\n  return chroma_js;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","chroma","limit","x","min","max","clip_rgb","rgb","_clipped","_unclipped","slice","i","classToType","list","length","name","toLowerCase","type","obj","Object","prototype","toString","call","unpack","args","keyOrder","Array","split","filter","k","undefined","map","last","l","PI","Math","utils","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","arguments","me","constructor","mode","sorted","sort","a","b","p","chk","test","apply","_rgb","Error","push","hex","join","Color_1","Function","bind","concat","version","chroma_1","unpack$1","rgb2cmyk","ref","r","g","f","c","m","y","rgb2cmyk_1","unpack$2","cmyk2rgb","alpha","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","round","hsl2css","hsla","hsl2css_1","unpack$5","rgb2hsl","s","h","Number","NaN","rgb2hsl_1","unpack$6","last$3","rgb2css","rgba","substr","rgb2css_1","unpack$7","round$1","hsl2rgb","assign","t3","t2","t1","h_","hsl2rgb_1","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg","delta","_g","rgb2hcg_1","unpack$a","floor","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","hcg2rgb_1","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","type$5","indexOf","unpack$d","sqrt","acos","rgb2hsi","min_","rgb2hsi_1","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsl$1","max_","rgb2hsv","unpack$i","floor$1","hsv2rgb","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","Kn","Xn","Yn","Zn","t0","unpack$k","pow","rgb2lab","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","unpack$l","pow$1","lab2rgb","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch","lab2lch_1","unpack$o","rgb2lch","rgb2lch_1","unpack$p","sin","cos$1","lch2lab","lch2lab_1","unpack$q","lch2rgb","L","lch2rgb_1","unpack$r","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$s","type$a","lch","forEach","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","type$b","keys","n","unpack$t","rgb2num","rgb2num_1","type$c","num2rgb","num","num2rgb_1","type$d","unpack$u","type$e","round$5","log","temperature2rgb","kelvin","temp","temperature2rgb_1","unpack$v","round$6","rgb2temperature","minTemp","maxTemp","eps","rgb2temperature_1","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","value","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","x1","y1","z1","x2","y2","z2","lab$1","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","lch$1","num$1","c1","c2","hcg$1","hsi$1","hsv$1","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","bezier_1","blend","bottom","top","blend_f","c0","each","normal","multiply","darken$1","lighten","screen","overlay","burn","dodge","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","digits","floor$2","random","random_1","code","log$1","pow$7","floor$3","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","contrast","l1","l2","sqrt$4","atan2$2","abs$1","cos$4","PI$2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delL","delC","delA","delB","dH2","v1","v2","v3","distance","sum_sq","valid","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","chroma_js"],"sources":["/Users/tomideisawesome/Documents/GitHub/Tomide-Adeoye-Portfolio/node_modules/chroma-js/chroma.js"],"sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.2';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}