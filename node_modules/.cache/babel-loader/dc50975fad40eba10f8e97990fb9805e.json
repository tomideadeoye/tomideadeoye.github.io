{"ast":null,"code":"import Badge from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\nexport default styled(Badge)(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const {\n    palette,\n    typography,\n    borders,\n    functions\n  } = theme;\n  const {\n    color,\n    circular,\n    border,\n    size,\n    indicator,\n    variant,\n    container,\n    children\n  } = ownerState;\n  const {\n    white,\n    dark,\n    gradients,\n    badgeColors\n  } = palette;\n  const {\n    size: fontSize,\n    fontWeightBold\n  } = typography;\n  const {\n    borderRadius,\n    borderWidth\n  } = borders;\n  const {\n    pxToRem,\n    linearGradient\n  } = functions; // padding values\n\n  const paddings = {\n    xs: \"0.45em 0.775em\",\n    sm: \"0.55em 0.9em\",\n    md: \"0.65em 1em\",\n    lg: \"0.85em 1.375em\"\n  }; // fontSize value\n\n  const fontSizeValue = size === \"xs\" ? fontSize.xxs : fontSize.xs; // border value\n\n  const borderValue = border ? `${borderWidth[3]} solid ${white.main}` : \"none\"; // borderRadius value\n\n  const borderRadiusValue = circular ? borderRadius.section : borderRadius.lg; // styles for the badge with indicator={true}\n\n  const indicatorStyles = sizeProp => {\n    let widthValue = pxToRem(20);\n    let heightValue = pxToRem(20);\n\n    if (sizeProp === \"medium\") {\n      widthValue = pxToRem(24);\n      heightValue = pxToRem(24);\n    } else if (sizeProp === \"large\") {\n      widthValue = pxToRem(32);\n      heightValue = pxToRem(32);\n    }\n\n    return {\n      width: widthValue,\n      height: heightValue,\n      display: \"grid\",\n      placeItems: \"center\",\n      textAlign: \"center\",\n      borderRadius: \"50%\",\n      padding: 0,\n      border: borderValue\n    };\n  }; // styles for the badge with variant=\"gradient\"\n\n\n  const gradientStyles = colorProp => {\n    const backgroundValue = gradients[colorProp] ? linearGradient(gradients[colorProp].main, gradients[colorProp].state) : linearGradient(gradients.info.main, gradients.info.state);\n    const colorValue = colorProp === \"light\" ? dark.main : white.main;\n    return {\n      background: backgroundValue,\n      color: colorValue\n    };\n  }; // styles for the badge with variant=\"contained\"\n\n\n  const containedStyles = colorProp => {\n    let backgroundValue = badgeColors[colorProp] ? badgeColors[colorProp].background : badgeColors.info.background;\n    let colorValue = badgeColors[colorProp] ? badgeColors[colorProp].text : badgeColors.info.text;\n\n    if (colorProp === \"light\") {\n      colorValue = dark.main;\n    } else if (colorProp === \"white\") {\n      backgroundValue = white.main;\n      colorValue = dark.main;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue\n    };\n  }; // styles for the badge with no children and container={false}\n\n\n  const standAloneStyles = () => ({\n    position: \"static\",\n    marginLeft: pxToRem(8),\n    transform: \"none\",\n    fontSize: pxToRem(9)\n  }); // styles for the badge with container={true}\n\n\n  const containerStyles = () => ({\n    position: \"relative\",\n    transform: \"none\"\n  });\n\n  return {\n    \"& .MuiBadge-badge\": {\n      height: \"auto\",\n      padding: paddings[size] || paddings.xs,\n      fontSize: fontSizeValue,\n      fontWeight: fontWeightBold,\n      textTransform: \"uppercase\",\n      lineHeight: 1,\n      textAlign: \"center\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"baseline\",\n      border: borderValue,\n      borderRadius: borderRadiusValue,\n      ...(indicator && indicatorStyles(size)),\n      ...(variant === \"gradient\" && gradientStyles(color)),\n      ...(variant === \"contained\" && containedStyles(color)),\n      ...(!children && !container && standAloneStyles(color)),\n      ...(container && containerStyles(color))\n    }\n  };\n});","map":{"version":3,"names":["Badge","styled","theme","ownerState","palette","typography","borders","functions","color","circular","border","size","indicator","variant","container","children","white","dark","gradients","badgeColors","fontSize","fontWeightBold","borderRadius","borderWidth","pxToRem","linearGradient","paddings","xs","sm","md","lg","fontSizeValue","xxs","borderValue","main","borderRadiusValue","section","indicatorStyles","sizeProp","widthValue","heightValue","width","height","display","placeItems","textAlign","padding","gradientStyles","colorProp","backgroundValue","state","info","colorValue","background","containedStyles","text","standAloneStyles","position","marginLeft","transform","containerStyles","fontWeight","textTransform","lineHeight","whiteSpace","verticalAlign"],"sources":["/Users/tomideisawesome/Documents/GitHub/tomideadeoye.github.io/src/components/MKBadge/MKBadgeRoot.js"],"sourcesContent":["import Badge from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Badge)(({ theme, ownerState }) => {\n\tconst { palette, typography, borders, functions } = theme;\n\tconst {\n\t\tcolor,\n\t\tcircular,\n\t\tborder,\n\t\tsize,\n\t\tindicator,\n\t\tvariant,\n\t\tcontainer,\n\t\tchildren,\n\t} = ownerState;\n\n\tconst { white, dark, gradients, badgeColors } = palette;\n\tconst { size: fontSize, fontWeightBold } = typography;\n\tconst { borderRadius, borderWidth } = borders;\n\tconst { pxToRem, linearGradient } = functions;\n\n\t// padding values\n\tconst paddings = {\n\t\txs: \"0.45em 0.775em\",\n\t\tsm: \"0.55em 0.9em\",\n\t\tmd: \"0.65em 1em\",\n\t\tlg: \"0.85em 1.375em\",\n\t};\n\n\t// fontSize value\n\tconst fontSizeValue = size === \"xs\" ? fontSize.xxs : fontSize.xs;\n\n\t// border value\n\tconst borderValue = border ? `${borderWidth[3]} solid ${white.main}` : \"none\";\n\n\t// borderRadius value\n\tconst borderRadiusValue = circular ? borderRadius.section : borderRadius.lg;\n\n\t// styles for the badge with indicator={true}\n\tconst indicatorStyles = (sizeProp) => {\n\t\tlet widthValue = pxToRem(20);\n\t\tlet heightValue = pxToRem(20);\n\n\t\tif (sizeProp === \"medium\") {\n\t\t\twidthValue = pxToRem(24);\n\t\t\theightValue = pxToRem(24);\n\t\t} else if (sizeProp === \"large\") {\n\t\t\twidthValue = pxToRem(32);\n\t\t\theightValue = pxToRem(32);\n\t\t}\n\n\t\treturn {\n\t\t\twidth: widthValue,\n\t\t\theight: heightValue,\n\t\t\tdisplay: \"grid\",\n\t\t\tplaceItems: \"center\",\n\t\t\ttextAlign: \"center\",\n\t\t\tborderRadius: \"50%\",\n\t\t\tpadding: 0,\n\t\t\tborder: borderValue,\n\t\t};\n\t};\n\n\t// styles for the badge with variant=\"gradient\"\n\tconst gradientStyles = (colorProp) => {\n\t\tconst backgroundValue = gradients[colorProp]\n\t\t\t? linearGradient(gradients[colorProp].main, gradients[colorProp].state)\n\t\t\t: linearGradient(gradients.info.main, gradients.info.state);\n\t\tconst colorValue = colorProp === \"light\" ? dark.main : white.main;\n\n\t\treturn {\n\t\t\tbackground: backgroundValue,\n\t\t\tcolor: colorValue,\n\t\t};\n\t};\n\n\t// styles for the badge with variant=\"contained\"\n\tconst containedStyles = (colorProp) => {\n\t\tlet backgroundValue = badgeColors[colorProp]\n\t\t\t? badgeColors[colorProp].background\n\t\t\t: badgeColors.info.background;\n\t\tlet colorValue = badgeColors[colorProp]\n\t\t\t? badgeColors[colorProp].text\n\t\t\t: badgeColors.info.text;\n\n\t\tif (colorProp === \"light\") {\n\t\t\tcolorValue = dark.main;\n\t\t} else if (colorProp === \"white\") {\n\t\t\tbackgroundValue = white.main;\n\t\t\tcolorValue = dark.main;\n\t\t}\n\n\t\treturn {\n\t\t\tbackground: backgroundValue,\n\t\t\tcolor: colorValue,\n\t\t};\n\t};\n\n\t// styles for the badge with no children and container={false}\n\tconst standAloneStyles = () => ({\n\t\tposition: \"static\",\n\t\tmarginLeft: pxToRem(8),\n\t\ttransform: \"none\",\n\t\tfontSize: pxToRem(9),\n\t});\n\n\t// styles for the badge with container={true}\n\tconst containerStyles = () => ({\n\t\tposition: \"relative\",\n\t\ttransform: \"none\",\n\t});\n\n\treturn {\n\t\t\"& .MuiBadge-badge\": {\n\t\t\theight: \"auto\",\n\t\t\tpadding: paddings[size] || paddings.xs,\n\t\t\tfontSize: fontSizeValue,\n\t\t\tfontWeight: fontWeightBold,\n\t\t\ttextTransform: \"uppercase\",\n\t\t\tlineHeight: 1,\n\t\t\ttextAlign: \"center\",\n\t\t\twhiteSpace: \"nowrap\",\n\t\t\tverticalAlign: \"baseline\",\n\t\t\tborder: borderValue,\n\t\t\tborderRadius: borderRadiusValue,\n\t\t\t...(indicator && indicatorStyles(size)),\n\t\t\t...(variant === \"gradient\" && gradientStyles(color)),\n\t\t\t...(variant === \"contained\" && containedStyles(color)),\n\t\t\t...(!children && !container && standAloneStyles(color)),\n\t\t\t...(container && containerStyles(color)),\n\t\t},\n\t};\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}