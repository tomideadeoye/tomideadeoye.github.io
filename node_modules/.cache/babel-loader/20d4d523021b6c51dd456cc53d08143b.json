{"ast":null,"code":"var _jsxFileName = \"/Users/tomideisawesome/Documents/GitHub/Tomide-Adeoye-Portfolio/src/components/MKTypography/index.js\";\nimport { forwardRef } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MKTypographyRoot = styled(Typography)(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const {\n    palette,\n    typography,\n    functions\n  } = theme;\n  const {\n    color,\n    textTransform,\n    verticalAlign,\n    fontWeight,\n    opacity,\n    textGradient\n  } = ownerState;\n  const {\n    gradients,\n    transparent\n  } = palette;\n  const {\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  } = typography;\n  const {\n    linearGradient\n  } = functions; // fontWeight styles\n\n  const fontWeights = {\n    light: fontWeightLight,\n    regular: fontWeightRegular,\n    medium: fontWeightMedium,\n    bold: fontWeightBold\n  }; // styles for the typography with textGradient={true}\n\n  const gradientStyles = () => ({\n    backgroundImage: color !== \"inherit\" && color !== \"text\" && color !== \"white\" && gradients[color] ? linearGradient(gradients[color].main, gradients[color].state) : linearGradient(gradients.dark.main, gradients.dark.state),\n    display: \"inline-block\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: transparent.main,\n    position: \"relative\",\n    zIndex: 1\n  }); // color value\n\n\n  const colorValue = color === \"inherit\" || !palette[color] ? \"inherit\" : palette[color].main;\n  return {\n    opacity,\n    textTransform,\n    verticalAlign,\n    textDecoration: \"none\",\n    color: colorValue,\n    letterSpacing: \"-0.125px\",\n    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],\n    ...(textGradient && gradientStyles())\n  };\n});\nconst MKTypography = /*#__PURE__*/forwardRef((_ref2, ref) => {\n  let {\n    color,\n    fontWeight,\n    textTransform,\n    verticalAlign,\n    textGradient,\n    opacity,\n    children,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(MKTypographyRoot, { ...rest,\n    ref: ref,\n    ownerState: {\n      color,\n      textTransform,\n      verticalAlign,\n      fontWeight,\n      opacity,\n      textGradient\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}); // Setting default values for the props of MKTypography\n\nMKTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1\n}; // Typechecking props for the MKTypography\n\nMKTypography.propTypes = {\n  color: PropTypes.oneOf([\"inherit\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"white\"]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\"unset\", \"baseline\", \"sub\", \"super\", \"text-top\", \"text-bottom\", \"middle\", \"top\", \"bottom\"]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number\n};\nexport default MKTypography;","map":{"version":3,"names":["forwardRef","Typography","styled","PropTypes","MKTypographyRoot","theme","ownerState","palette","typography","functions","color","textTransform","verticalAlign","fontWeight","opacity","textGradient","gradients","transparent","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","linearGradient","fontWeights","light","regular","medium","bold","gradientStyles","backgroundImage","main","state","dark","display","WebkitBackgroundClip","WebkitTextFillColor","position","zIndex","colorValue","textDecoration","letterSpacing","MKTypography","ref","children","rest","defaultProps","propTypes","oneOf","bool","node","isRequired","number"],"sources":["/Users/tomideisawesome/Documents/GitHub/Tomide-Adeoye-Portfolio/src/components/MKTypography/index.js"],"sourcesContent":["import { forwardRef } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\nimport PropTypes from \"prop-types\";\n\nconst MKTypographyRoot = styled(Typography)(({ theme, ownerState }) => {\n  const { palette, typography, functions } = theme;\n  const { color, textTransform, verticalAlign, fontWeight, opacity, textGradient } = ownerState;\n  const { gradients, transparent } = palette;\n  const { fontWeightLight, fontWeightRegular, fontWeightMedium, fontWeightBold } = typography;\n  const { linearGradient } = functions;\n\n  // fontWeight styles\n  const fontWeights = {\n    light: fontWeightLight,\n    regular: fontWeightRegular,\n    medium: fontWeightMedium,\n    bold: fontWeightBold,\n  };\n\n  // styles for the typography with textGradient={true}\n  const gradientStyles = () => ({\n    backgroundImage:\n      color !== \"inherit\" && color !== \"text\" && color !== \"white\" && gradients[color]\n        ? linearGradient(gradients[color].main, gradients[color].state)\n        : linearGradient(gradients.dark.main, gradients.dark.state),\n    display: \"inline-block\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: transparent.main,\n    position: \"relative\",\n    zIndex: 1,\n  });\n\n  // color value\n  const colorValue = color === \"inherit\" || !palette[color] ? \"inherit\" : palette[color].main;\n\n  return {\n    opacity,\n    textTransform,\n    verticalAlign,\n    textDecoration: \"none\",\n    color: colorValue,\n    letterSpacing: \"-0.125px\",\n    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],\n    ...(textGradient && gradientStyles()),\n  };\n});\n\nconst MKTypography = forwardRef(\n  (\n    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },\n    ref\n  ) => (\n    <MKTypographyRoot\n      {...rest}\n      ref={ref}\n      ownerState={{\n        color,\n        textTransform,\n        verticalAlign,\n        fontWeight,\n        opacity,\n        textGradient,\n      }}\n    >\n      {children}\n    </MKTypographyRoot>\n  )\n);\n\n// Setting default values for the props of MKTypography\nMKTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1,\n};\n\n// Typechecking props for the MKTypography\nMKTypography.propTypes = {\n  color: PropTypes.oneOf([\n    \"inherit\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"white\",\n  ]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\n    \"unset\",\n    \"baseline\",\n    \"sub\",\n    \"super\",\n    \"text-top\",\n    \"text-bottom\",\n    \"middle\",\n    \"top\",\n    \"bottom\",\n  ]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number,\n};\n\nexport default MKTypography;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}